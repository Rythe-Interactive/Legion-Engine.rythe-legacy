
.. _program_listing_file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_rendering_pipeline_default_stages_debugrenderstage.hpp:

Program Listing for File debugrenderstage.hpp
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_rendering_pipeline_default_stages_debugrenderstage.hpp>` (``/home/runner/work/Legion-Engine.rythe-legacy/Legion-Engine.rythe-legacy/legion/engine/rendering/pipeline/default/stages/debugrenderstage.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #include <rendering/pipeline/base/renderstage.hpp>
   #include <rendering/pipeline/base/pipeline.hpp>
   #include <rendering/debugrendering.hpp>
   
   namespace legion::rendering
   {
       class DebugRenderStage : public RenderStage<DebugRenderStage>
       {
       private:
           static async::spinlock debugLinesLock;
           static thread_local std::unordered_set<debug::debug_line_event>* localLines;
           static std::unordered_map<std::thread::id, std::unordered_set<debug::debug_line_event>*> debugLines;
   
       public:
           static void startDebugDomain();
           static void endDebugDomain();
   
           void drawDebugLine(events::event_base* event);
   
           virtual void setup(app::window& context) override;
           virtual void render(app::window& context, camera& cam, const camera::camera_input& camInput, time::span deltaTime) override;
           virtual priority_type priority() override;
       };
   }
