
.. _program_listing_file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_physics_data_physics_manifold_precursor.hpp:

Program Listing for File physics_manifold_precursor.hpp
=======================================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_physics_data_physics_manifold_precursor.hpp>` (``/home/runner/work/Legion-Engine.rythe-legacy/Legion-Engine.rythe-legacy/legion/engine/physics/data/physics_manifold_precursor.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #include <core/core.hpp>
   #include <physics/components/physics_component.hpp>
   
   namespace legion::physics
   {
       struct physics_manifold_precursor
       {
           math::mat4 worldTransform;
           physicsComponent* physicsComp;
           id_type id;
           ecs::entity_handle entity;
   
           physics_manifold_precursor() = default;
   
           physics_manifold_precursor(math::mat4 pWorldTransform, physicsComponent* pPhysicsComp, id_type precursorID, ecs::entity_handle entity) :
               worldTransform(pWorldTransform), physicsComp(pPhysicsComp), id(precursorID), entity(entity)
           {
   
           }
   
           bool operator==(const physics_manifold_precursor& rhs)
           {
               return entity == rhs.entity;
           }
       };
   
   }
