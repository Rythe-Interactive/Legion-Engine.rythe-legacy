
.. _program_listing_file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_physics_data_penetrationquery.hpp:

Program Listing for File penetrationquery.hpp
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_physics_data_penetrationquery.hpp>` (``/home/runner/work/Legion-Engine.rythe-legacy/Legion-Engine.rythe-legacy/legion/engine/physics/data/penetrationquery.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <core/core.hpp>
   
   namespace legion::physics
   {
       struct physics_manifold;
       class PhysicsCollider;
   
       //After a collision is found, stores the necessary information to create contact points
       class PenetrationQuery
       {
       public:
   
           math::vec3 faceCentroid,normal;
           float penetration = 0.0f;
           bool isARef;
           std::string debugID = "na";
   
           PenetrationQuery(math::vec3& pFaceCentroid,math::vec3& pNormal,float pPenetration,bool pIsARef) :
               faceCentroid(pFaceCentroid),normal(pNormal),penetration(pPenetration),isARef(pIsARef)
           {
   
           }
   
           virtual void populateContactList(physics_manifold& manifold
               ,math::mat4& refTransform,math::mat4 incTransform, PhysicsCollider* refCollider)
           {
   
           }
       };
   
   }
   
