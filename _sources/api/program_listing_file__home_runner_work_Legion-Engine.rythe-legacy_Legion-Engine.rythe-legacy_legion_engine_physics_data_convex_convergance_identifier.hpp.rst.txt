
.. _program_listing_file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_physics_data_convex_convergance_identifier.hpp:

Program Listing for File convex_convergance_identifier.hpp
==========================================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_physics_data_convex_convergance_identifier.hpp>` (``/home/runner/work/Legion-Engine.rythe-legacy/Legion-Engine.rythe-legacy/legion/engine/physics/data/convex_convergance_identifier.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #include <core/core.hpp>
   #include <physics/data/convergance_identifier.hpp>
   #include <physics/data/edge_label.hpp>
   namespace legion::physics
   {
       class ConvexConverganceIdentifier : public ConverganceIdentifier
       {
       public:
   
           ConvexConverganceIdentifier(const EdgeLabel& label, float pTotalLambda,
               float pTangent1Lambda, float pTangent2Lambda, int pRefColliderId)
               : ConverganceIdentifier(label,pTotalLambda, pTangent1Lambda, pTangent2Lambda, pRefColliderId)
           {
   
           }
   
          
   
           bool IsEqual(physics_contact& contact) override
           {
               return label == contact.label;
           }
   
   
   
       private:
    
   
       };
   }
