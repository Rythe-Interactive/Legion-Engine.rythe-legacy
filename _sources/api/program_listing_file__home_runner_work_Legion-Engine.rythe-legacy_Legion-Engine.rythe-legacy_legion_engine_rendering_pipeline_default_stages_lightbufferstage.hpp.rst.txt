
.. _program_listing_file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_rendering_pipeline_default_stages_lightbufferstage.hpp:

Program Listing for File lightbufferstage.hpp
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_rendering_pipeline_default_stages_lightbufferstage.hpp>` (``/home/runner/work/Legion-Engine.rythe-legacy/Legion-Engine.rythe-legacy/legion/engine/rendering/pipeline/default/stages/lightbufferstage.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #include <rendering/pipeline/base/renderstage.hpp>
   #include <rendering/pipeline/base/pipeline.hpp>
   #include <rendering/components/light.hpp>
   
   namespace legion::rendering
   {
       class LightBufferStage : public RenderStage<LightBufferStage>
       {
           static async::spinlock m_lightEntitiesLock;
           static std::unordered_set<ecs::entity_handle> m_lightEntities;
           static std::vector<detail::light_data> m_lights;
   
           void onLightCreate(events::component_creation<light>* event);
           void onLightDestroy(events::component_destruction<light>* event);
   
       public:
           virtual void setup(app::window& context) override;
           virtual void render(app::window& context, camera& cam, const camera::camera_input& camInput, time::span deltaTime) override;
           virtual priority_type priority() override;
       };
   }
