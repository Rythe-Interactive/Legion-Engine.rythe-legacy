
.. _program_listing_file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_rendering_pipeline_gui_stages_imguirenderstage.hpp:

Program Listing for File imguirenderstage.hpp
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine.rythe-legacy_Legion-Engine.rythe-legacy_legion_engine_rendering_pipeline_gui_stages_imguirenderstage.hpp>` (``/home/runner/work/Legion-Engine.rythe-legacy/Legion-Engine.rythe-legacy/legion/engine/rendering/pipeline/gui/stages/imguirenderstage.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #include <rendering/pipeline/base/renderstage.hpp>
   
   namespace legion::rendering
   {
       class ImGuiStage : public RenderStage<ImGuiStage>
       {
       public:
           void setup(app::window& context) override;
           void render(app::window& context, camera& cam, const camera::camera_input& camInput, time::span deltaTime) override;
           priority_type priority() override;
   
           template <class T,void(T::*Func)(app::window&, camera&, const camera::camera_input&, time::span)>
           static void addGuiRender(T* ptr)
           {
               m_onGuiRender += delegate<void(app::window&, camera&, const camera::camera_input&, time::span)>::create<T,Func>(ptr);
           }
   
   
       private:
   
           static multicast_delegate<void(app::window&, camera&, const camera::camera_input&, time::span)> m_onGuiRender;
       };
   }
